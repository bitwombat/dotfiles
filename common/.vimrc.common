" VIM settings that should always be
"

" Features {{{
set nocompatible
set hidden
filetype on
filetype plugin indent on
syntax on
" make vim pop out of Insert mode immediately, without waiting for more keypresses. Breaks arrow keys in insert mode.
"set noesckeys
"inoremap <C-p> <up>
"inoremap <C-n> <down>

" When finding or ctrl-x, search entire tree
set path+=**

set listchars=tab:>.,trail:.,extends:#,nbsp:.,eol:$
set pastetoggle=<F2>
set backspace=indent,eol,start
" }}}

" Visual settings {{{
set laststatus=2
set modeline
set ruler
set showcmd
set showmatch
set noshowmode

" Use a cursor line when navigating around, off when in insert mode
set cursorline
autocmd InsertLeave,WinEnter * set cursorline
autocmd InsertEnter,WinLeave * set nocursorline

set fillchars+=vert:â”‚  " Vertical split

" Fix error highlighting in terminal
highlight clear SpellBad
highlight SpellBad term=standout ctermfg=1 term=underline cterm=underline

" Warn if file changes on disk
au CursorHold * checktime

" Set the title of the screen window
if &term =~ "screen"
  set t_ts=k
  set t_fs=\
endif
if &term =~ "screen" || &term == "xterm"
  set title
endif
set titlestring=%{expand(\"%:t\")}

" Make background clearing work in GNU screen
set t_ut=
" }}}

" Folding settings {{{
set foldmethod=indent
set foldlevelstart=1
syn region myFold start="{" end="}" transparent fold
syn sync fromstart

" Without the following, folding doesn't work on php .inc files
let g:php_folding=1
let g:javaScript_fold=1

" The markdown ftplugin is enabled with this
let g:markdown_folding=1

" }}}

" Feature-related variables {{{
set autowrite
set backup
set backupdir=/tmp
"set complete+=k
"set dictionary=/usr/share/dict/words
set noerrorbells
set fileformat=unix
set scrolloff=2
set vb t_vb=
set wildmenu
" }}}

" Search settings {{{
set ignorecase
set incsearch
set smartcase
set hlsearch
" }}}

" Editor behaviour {{{
set tabstop=4
set softtabstop=4
set shiftwidth=4
set wrap
set textwidth=79
set formatoptions=jqrocb
set expandtab
"set colorcolumn=85
" }}}

" Keys {{{
" Navigate Syntastic errors (location list, not quickfix!)
nnoremap } :<C-R>=len(getloclist(0))==1?"cl":"lnext"<CR><CR>
nnoremap { :<C-R>=len(getloclist(0))==1?"cl":"lprevious"<CR><CR>

" Access plugins
nnoremap ,nt :NERDTree<CR>
nnoremap ,cp :CtrlPBuffer<CR>

nnoremap ,cd :cd %:h<CR>:pwd<CR>

" Buffers
nnoremap ,k :bnext<CR>
nnoremap ,j :bprevious<CR>
nnoremap ,b :ls<CR>:b<space>

" tabbable list of buffers
set wildcharm=<C-z>
nnoremap ,B :buffer <C-z><S-Tab>
nnoremap ,B :sbuffer <C-z><S-Tab>

" Tabs
nnoremap ,tk :tabnext<CR>
nnoremap ,tj :tabprevious<CR>
nnoremap ,tc :tabclose<CR>
nnoremap ,tn :tabnew<CR>

" Clipboard
noremap ,c "+y
noremap ,p "+p
noremap ,P "+P

" Replace the current word and all its occurrences. (Global Change)
"nnoremap ,gc :%s/\<<C-r><C-w>\>/
"vnoremap ,gc y:%s/<C-r>"/
nnoremap ,gc :'<,'>s/\<<C-r><C-w>\>/

" Move to match with tab
nnoremap <tab> %
vnoremap <tab> %

" Escape from insert mode with jj
inoremap jj <ESC>

" Move screen line instead of buffer line
nnoremap <C-J> gj
nnoremap <C-K> gk

" Ctrl-C in insert mode opens up a line - for inside things like {}
inoremap <C-c> <CR><Esc>O<Tab>

" Replace the next space with a newline
nnoremap ,J f xi<CR><Esc>

" Yank from the cursor to the end of the line, to be consistent with C and D.
nnoremap Y y$

" Fixing
nnoremap F gq}
nnoremap T :%s/  *$//g<CR>

" Macroing
nnoremap L @l

" IDE
nnoremap <F11> :cn<CR>
nnoremap <F10> :cN<CR>

" Saving
noremap <F1> :update<CR>
inoremap <F1> <ESC>:update<CR>a
noremap <C-s> :update<CR>
inoremap <C-s> <ESC>:update<CR>a

" Quitting
" closes the current window.  Will exit if last window (unlike Ctrl-W C).
nnoremap <C-d> :q<CR>

" Viewing Modes
noremap <F5> :set relativenumber!<CR>
noremap <F6> :set number!<Bar>:set relativenumber!<CR>
noremap <F7> :if exists("syntax_on") <Bar> syntax off <Bar> <CR> else <Bar> syntax on <Bar> endif <CR>
noremap <F8> :if &ignorecase <Bar> set noic <Bar> <CR> else <Bar> set ic <Bar> endif <CR>
noremap <F9> :set list!<Bar>set list?<CR>

" Relative numbers
set number relativenumber

augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
augroup END

" Folding
noremap U zA
"noremap , za

" Copy the entire buffer to the system clipboard (like Ctrl-A)
noremap ,a <Esc>gg"+yG

" Ctrl-A and Ctrl-E work as they do on the command line
noremap <C-a> ^
noremap <C-e> $
inoremap <C-a> <C-o>^
inoremap <C-e> <C-o>$

" Quickly select the text that was just pasted. This allows you to, e.g.,
" indent it after pasting.
noremap gV `[v`]

" Stay in visual mode when indenting. You will never have to run gv after
" performing an indentation.
vnoremap < <gv
vnoremap > >gv

" Remove the highlighting from the search
nnoremap <silent> <BS>  :nohlsearch<CR>

" Splitting
noremap <C-w>- :split<cr>
noremap <C-w>\| :vsplit<cr>

" Change cw and dw to know about camelCase and underscores
" Problem with this is the hlsearch options highlights a bunch of stuff in the
" file since we're using /.  Didn't find a "non-saved" / in vim.
" Installed https://github.com/chaoren/vim-wordmotion  which seems to work
" but not with PhpStorm's Vim plugin.
"map cw c/\u\\|[^0-9A-Za-z_]<CR>
"map dw d/\u\\|[^0-9A-Za-z_]<CR>
" }}}

" Ctags {{{
    set tags=./tags,tags
    let &tags = &tags . ',/www/aquasafe/app/.project_ctags'
" }}}

" vim:foldmethod=marker
