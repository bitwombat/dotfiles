
augroup yml
    autocmd BufReadPost,FileReadPost *.yml  set tabstop=2
    autocmd BufReadPost,FileReadPost *.yml  set nofoldenable
augroup END

augroup python
    autocmd BufReadPost,FileReadPost *.py  set foldmethod=syntax
    autocmd BufReadPost,FileReadPost *.py  set keywordprg=pydoc
    " Make the 81st column stand out
    autocmd BufReadPost,FileReadPost *.py  highlight ColorColumn ctermbg=yellow
    autocmd BufReadPost,FileReadPost *.py  call matchadd('ColorColumn', '\%81v', 100)
augroup END

" Without the fileytype=html, =G reformatting doesn't work, even though
" filetype seems to get set to html without it.
augroup html
    autocmd BufReadPost,FileReadPost *.html,*.phtml set sw=2
    autocmd BufReadPost,FileReadPost *.html,*.phtml set foldmethod=syntax
    autocmd BufReadPost,FileReadPost *.html,*.phtml filetype indent on
    autocmd BufReadPost,FileReadPost *.html,*.phtml set smartindent
    autocmd BufReadPost,FileReadPost *.html,*.phtml set filetype=html
    autocmd BufReadPost,FileReadPost *.html,*.phtml abbreviate sph <?php
    autocmd BufReadPost,FileReadPost *.html,*.phtml abbreviate eph ?>
augroup END

" /usr/share/vim/vim74/syntax/markdown.vim calls javascript.vim which sets
" foldmethod to syntax.  Set it back to what ftplugin/markdown.vim needs to
" work right.
augroup markdown
    autocmd BufNewFile,BufReadPost *.md set filetype=markdown
    autocmd BufNewFile,BufReadPost *.md set foldmethod=expr
    autocmd BufNewFile,BufReadPost *.md let g:markdown_folding=1
augroup END

augroup css
    autocmd BufReadPost,FileReadPost *.css  set foldmethod=syntax
    autocmd BufReadPost,FileReadPost *.css  set keywordprg=:help
    autocmd BufReadPost,FileReadPost *.css  set iskeyword+=-
augroup END

augroup text
    autocmd BufRead,BufNewFile       *.txt colorscheme zenburn
augroup END

augroup pptx
    autocmd BufRead,BufNewFile       outline.txt set noexpandtab
    autocmd BufRead,BufNewFile       outline.txt set fileformat=dos
augroup END 

augroup Obj-C
    autocmd BufRead,BufNewFile       *.[cmh] colorscheme oceandeep
    autocmd BufRead,BufNewFile       *.[cmh] so ~/.vim/cocoa.vim/plugin/cocoa.vim
    " Make the 81st column stand out
    autocmd BufRead,BufNewFile       *.[cmh] highlight ColorColumn ctermbg=yellow
    autocmd BufRead,BufNewFile       *.[cmh] call matchadd('ColorColumn', '\%81v', 100)
    autocmd BufRead,BufNewFile       *.[cmh] set foldmethod=syntax
augroup END

augroup cpp
    autocmd BufReadPost,FileReadPost *.h  set foldmethod=syntax
    autocmd BufReadPost,FileReadPost *.cpp  syn region myFold start="{" end="}" transparent fold
    autocmd BufReadPost,FileReadPost *.cpp  syn sync fromstart
    autocmd BufReadPost,FileReadPost *.cpp  set foldmethod=syntax
augroup END

augroup php
    autocmd BufReadPost,FileReadPost *.php  abbreviate sph <?php
    autocmd BufReadPost,FileReadPost *.php  abbreviate eph ?>
    autocmd BufReadPost,FileReadPost *.php  nnoremap <silent><buffer> K <Esc>:silent! call system("phpdoc " . expand('<cword>'))<CR>
augroup END

augroup js
    autocmd BufReadPost,FileReadPost *.js set tabstop=2
    autocmd BufReadPost,FileReadPost *.js set autoindent
    autocmd BufReadPost,FileReadPost *.js set smartindent
augroup END

augroup james
    autocmd BufReadPost,FileReadPost */deit/*.php set noexpandtab
    autocmd BufReadPost,FileReadPost */uf_checkout/*/src/*.php set noexpandtab
augroup END

augroup bookmarks
    autocmd VimLeavePre Bookmarks.txt call ClearRegs()
augroup END


